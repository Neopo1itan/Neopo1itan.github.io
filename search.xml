<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>youyan</title>
    <url>/posts/2492.html</url>
    <content><![CDATA[<p>中等大小:<a href="https://imgtg.com/image/OzFLtg"><img data-src="https://i.imgtg.com/2023/07/12/OzFLtg.png" alt="OzFLtg.png"></a></p>
]]></content>
  </entry>
  <entry>
    <title>用Python编写一个jd秒杀脚本</title>
    <url>/posts/33264.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>本文运用python的selenium模块来编写实现自动秒杀jd商品的脚本。</p>
<span id="more"></span>
<p>脚本的流程如下：</p>
<ol>
<li>在控制台输入抢购的时间</li>
<li>打开浏览器，跳转到<a href="http://www.jd.com/">www.jd.com</a></li>
<li>打开登录页，人工扫码登陆</li>
<li>登陆成功跳转到购物车界面</li>
<li>控制台选择全选还是手动勾选商品</li>
<li>抢购时间自动点击结算按钮</li>
</ol>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p><font size="2" color="grey">python环境和ide工具就不作多说</font></p>
<ol>
<li><strong>ChromeDriver安装</strong>：自行搜索网上教程，有很多。</li>
<li><strong>selenium安装</strong>：selenium是python的第三方库，用于Web应用测试，可以直接运行在浏览器模拟用户操作。通过<code>pip install selenium</code>安装，速度慢可以替换国内镜像源，教程网上也有。</li>
</ol>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>新建一个<code>.py</code>文件打开输入如下代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="comment"># 打开京东登录页，并进行扫码登录</span></span><br><span class="line">    browser.get(<span class="string">&quot;https://www.jd.com&quot;</span>)</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">if</span> browser.find_element(By.LINK_TEXT, <span class="string">&quot;你好，请登录&quot;</span>):</span><br><span class="line">        browser.find_element(By.LINK_TEXT, <span class="string">&quot;你好，请登录&quot;</span>).click()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;======请在30秒内完成登录&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">30</span>)</span><br><span class="line">        browser.get(<span class="string">&quot;https://cart.jd.com&quot;</span>)</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    now = datetime.datetime.now()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;======login success:&#x27;</span>, now.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>))</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">buy</span>(<span class="params">times, choose</span>):</span><br><span class="line">    <span class="comment"># 点击购物车里全选按钮</span></span><br><span class="line">    <span class="keyword">if</span> choose == <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;======请手动勾选需要购买的商品&quot;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        now = datetime.datetime.now().strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S.%f&#x27;</span>)</span><br><span class="line">        <span class="comment"># 对比时间，时间到的话就点击结算</span></span><br><span class="line">        <span class="keyword">if</span> now &gt; times:</span><br><span class="line">            <span class="keyword">if</span> choose == <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="keyword">if</span> browser.find_element(By.ID, <span class="string">&quot;J_SelectAll2&quot;</span>):</span><br><span class="line">                            browser.find_element(By.ID, <span class="string">&quot;J_SelectAll2&quot;</span>).click()</span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;======找不到购买按钮&quot;</span>)</span><br><span class="line">            <span class="comment"># 点击结算按钮</span></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="keyword">if</span> browser.find_element(By.LINK_TEXT, <span class="string">&quot;去结算&quot;</span>):</span><br><span class="line">                        browser.find_element(By.LINK_TEXT, <span class="string">&quot;去结算&quot;</span>).click()</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;======结算成功&quot;</span>)</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="keyword">if</span> browser.find_element(By.ID, <span class="string">&#x27;order-submit&#x27;</span>):</span><br><span class="line">                        browser.find_element(By.ID, <span class="string">&#x27;order-submit&#x27;</span>).click()</span><br><span class="line">                        now1 = datetime.datetime.now().strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S.%f&#x27;</span>)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;======抢购成功时间：%s&quot;</span> % now1)</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;======再次尝试提交订单&quot;</span>)</span><br><span class="line">            time.sleep(<span class="number">0.01</span>)</span><br><span class="line"><span class="comment"># 抢购主函数</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    times = <span class="built_in">input</span>(<span class="string">&quot;请输入抢购时间，格式如(2018-09-06 11:20:00.000000):&quot;</span>)</span><br><span class="line">    browser = webdriver.Chrome()</span><br><span class="line">    browser.maximize_window()</span><br><span class="line">    login()</span><br><span class="line">    choose = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;到时间自动勾选购物车请输入“1”，否则输入“2”：&quot;</span>))</span><br><span class="line">    buy(times, choose)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>值得注意的是，网上有的教程写法是<code>find_element_by_link_text</code>，运行会报错，是因为新版本selenium已经使用新的写法<code>find_element(By.XX, &#39; &#39;)</code>，<strong>XX</strong>可以是ID，LINK_TEXT，class_name等等。</p>
<p>运行代码按流程操作就能秒杀抢购自己需要的商品。</p>
<blockquote>
<p>参考链接:<br><a href="https://blog.csdn.net/python03014/article/details/130477281">https://blog.csdn.net/python03014/article/details/130477281</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>用nodejs编写一个淘宝秒杀脚本</title>
    <url>/posts/958.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>本文运用dayjs和selenium-webdriver两个包来编写自动秒杀taobao商品的脚本，功能单一简单。</p>
<span id="more"></span>
<p>脚本的流程如下：</p>
<ol>
<li>打开浏览器<code>chrome</code>，最大化并跳转到taobao.com</li>
<li>打开登录页，人工扫码登陆</li>
<li>登陆成功跳转到购物车界面</li>
<li>自动点击全选按钮</li>
<li>自动点击结算按钮</li>
</ol>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>打开命令行工具，安装该脚本所需要的两个包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//因为作者设置了打赏，需要在末尾加入--no-fund</span><br><span class="line">npm i dayjs --save --no-fund</span><br><span class="line">npm i selenium-webdriver --save --no fund</span><br></pre></td></tr></table></figure>

<p>安装完成后，新建一个<code>.js</code>文件，名称任意，加入如下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> dayjs = <span class="built_in">require</span>(<span class="string">&quot;dayjs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">By</span> &#125; = <span class="built_in">require</span>(<span class="string">&quot;selenium-webdriver&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> selenium = <span class="built_in">require</span>(<span class="string">&quot;selenium-webdriver&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> driver = <span class="keyword">new</span> selenium.<span class="title class_">Builder</span>().<span class="title function_">forBrowser</span>(<span class="string">&quot;chrome&quot;</span>).<span class="title function_">build</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 最大化浏览器</span></span><br><span class="line">driver.<span class="title function_">manage</span>().<span class="title function_">window</span>().<span class="title function_">maximize</span>();</span><br><span class="line">driver.<span class="title function_">get</span>(<span class="string">&quot;https://www.taobao.com&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">sleep</span> = (<span class="params">time</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(resolve, time * <span class="number">1000</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 登录</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">login</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> loginText = driver.<span class="title function_">findElement</span>(<span class="title class_">By</span>.<span class="title function_">linkText</span>(<span class="string">&quot;亲，请登录&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (loginText) loginText.<span class="title function_">click</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;请在20秒内完成扫码&quot;</span>);</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">20</span>);</span><br><span class="line">  driver.<span class="title function_">get</span>(<span class="string">&quot;https://cart.taobao.com/cart.htm&quot;</span>);</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">3</span>);</span><br><span class="line">  <span class="comment">//   点击全选按钮</span></span><br><span class="line">  <span class="keyword">if</span> (driver.<span class="title function_">findElement</span>(<span class="title class_">By</span>.<span class="title function_">id</span>(<span class="string">&quot;J_SelectAll1&quot;</span>)))</span><br><span class="line">    driver.<span class="title function_">findElement</span>(<span class="title class_">By</span>.<span class="title function_">id</span>(<span class="string">&quot;J_SelectAll1&quot;</span>)).<span class="title function_">click</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;登录成功：&quot;</span>, <span class="title function_">dayjs</span>(<span class="keyword">new</span> <span class="title class_">Date</span>()).<span class="title function_">format</span>(<span class="string">&quot;YYYY-MM-DD HH:mm:ss&quot;</span>));</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">0.4</span>);</span><br><span class="line">  <span class="title function_">buy</span>(<span class="string">&quot;20xx-xx-xx xx:xx:xx&quot;</span>);<span class="comment">//此处修改开售时间</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 秒杀</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">buy</span> = <span class="keyword">async</span> (<span class="params">buyTime</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> now = <span class="title function_">dayjs</span>(<span class="keyword">new</span> <span class="title class_">Date</span>()).<span class="title function_">format</span>(<span class="string">&quot;YYYY-MM-DD HH:mm:ss&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (now === buyTime) &#123;</span><br><span class="line">      <span class="keyword">if</span> (driver.<span class="title function_">findElement</span>(&#123; <span class="attr">id</span>: <span class="string">&quot;J_Go&quot;</span> &#125;))</span><br><span class="line">        driver.<span class="title function_">findElement</span>(&#123; <span class="attr">id</span>: <span class="string">&quot;J_Go&quot;</span> &#125;).<span class="title function_">click</span>();</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">0.4</span>);</span><br><span class="line">      <span class="title function_">submit</span>();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提交订单</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">submit</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (driver.<span class="title function_">findElement</span>(<span class="title class_">By</span>.<span class="title function_">linkText</span>(<span class="string">&quot;提交订单&quot;</span>)))</span><br><span class="line">    driver.<span class="title function_">findElement</span>(<span class="title class_">By</span>.<span class="title function_">linkText</span>(<span class="string">&quot;提交订单&quot;</span>)).<span class="title function_">click</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;抢购时间：&quot;</span>, <span class="title function_">dayjs</span>(<span class="keyword">new</span> <span class="title class_">Date</span>()).<span class="title function_">format</span>(<span class="string">&quot;YYYY-MM-DD HH:mm:ss&quot;</span>));</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">login</span>();</span><br></pre></td></tr></table></figure>

<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>在该脚本文件所在位置打开命令行工具，输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//xxx.js为刚才保存的脚本文件，名字自定</span><br><span class="line">node xxx.js //回车</span><br></pre></td></tr></table></figure>

<p>脚本自动运行，扫码登陆后就在你设置好的时间开始帮你秒杀商品。</p>
<blockquote>
<p>参考链接:<br><a href="https://www.zhihu.com/tardis/bd/art/609639709?source_id=1001">https://www.zhihu.com/tardis/bd/art/609639709?source_id=1001</a></p>
</blockquote>
]]></content>
      <categories>
        <category>自动化脚本</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>用React Hooks搭建一个电影搜索App</title>
    <url>/posts/13078.html</url>
    <content><![CDATA[<p>这个 App 实现的效果是通过<strong>OMDB API</strong>来搜索电影并将结果展现给用户。搭建这个 App 的过程能帮助我们很好的学习<strong>React Hooks</strong>的用法，练习实际项目能帮助更快上手。</p>
<h3 id="App-完成后的效果预览"><a href="#App-完成后的效果预览" class="headerlink" title="App 完成后的效果预览"></a>App 完成后的效果预览</h3><p><a href="https://imgtg.com/image/OzZvvc"><img data-src="https://i.imgtg.com/2023/07/13/OzZvvc.md.png" alt="OzZvvc.md.png"></a></p>
<span id="more"></span>
<h3 id="项目用到的工具"><a href="#项目用到的工具" class="headerlink" title="项目用到的工具"></a>项目用到的工具</h3><ul>
<li>Node</li>
<li>VsCode</li>
<li>OMDB 的 API key (<a href="http://www.omdbapi.com/apikey.aspx">这里获得</a>)</li>
</ul>
<p>准备好上述工具后，我们需要用 react 的脚手架工具来帮助我们搭建一个全新的 React 应用程序，安装<strong>create-react-app</strong>脚手架：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i -g create-react-app</span><br><span class="line">//或者用cnpm yarn都可以</span><br></pre></td></tr></table></figure>

<p>然后通过脚手架新建项目:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">create-react-app movie-search-app</span><br></pre></td></tr></table></figure>

<p>完成之后用 VsCode 打开该目录，目录结构如下图所示：<br><a href="https://imgtg.com/image/Ozh9w6"><img data-src="https://i.imgtg.com/2023/07/12/Ozh9w6.md.png" alt="structure"></a></p>
<h3 id="构成该-App-的-4-个组件"><a href="#构成该-App-的-4-个组件" class="headerlink" title="构成该 App 的 4 个组件"></a>构成该 App 的 4 个组件</h3><ul>
<li><strong>App.js</strong> —— 它是其它 3 个组件的父组件，将包含处理 API 请求的函数以及组件初始化时调用的 API</li>
<li><strong>Header.js</strong> —— 接受参数并展示 App 的标题</li>
<li><strong>Movie.js</strong> —— 渲染每个电影，电影对象将通过参数传递给它</li>
<li><strong>Search.js</strong> —— 包含一个带有输入和搜索按钮的表单，处理输入和重置的函数以及一个作为参数传递给它的搜索函数</li>
</ul>
<h3 id="开始着手构建我们的-APP"><a href="#开始着手构建我们的-APP" class="headerlink" title="开始着手构建我们的 APP"></a>开始着手构建我们的 APP</h3><p>在<code>src</code>目录下新建一个文件夹命名为<code>components</code>(之后所有组件都将保存在这个地方)，然后把<code>App.js</code>组件移动到该目录下。新建一个<code>Header.js</code>组件用于展示程序的标题，并加入如下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Header.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Header</span> = (<span class="params">props</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">header</span> <span class="attr">className</span>=<span class="string">&quot;App-header&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;props.text&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Header</span>;</span><br></pre></td></tr></table></figure>

<p>更新<code>src</code>目录下<code>index.js</code>中的导入</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//index.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./components/App&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>并且更新<code>App.css</code>中的样式代码(供参考)：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.App</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.App-header</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#282c34</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="built_in">calc</span>(<span class="number">10px</span> + <span class="number">2vmin</span>);</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.spinner</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.App-intro</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: large;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* new css for movie component */</span></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.movies</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.App-header</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.add-movies</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.add-movies</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">30px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.movie</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">25px</span> <span class="number">10px</span> <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">25%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.errorMessage</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">161</span>, <span class="number">15</span>, <span class="number">15</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">  <span class="attribute">color</span>: black;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#282c34</span>;</span><br><span class="line">  <span class="attribute">color</span>: antiquewhite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search</span> &gt; <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40%</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">170px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">694px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">915px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.movie</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">33%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">652px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">693px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.movie</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">651px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.movie</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><font color="gray" size=2>随时可以用<font color=#C4244D size=2>npm start</font>启动项目来查看效果</font></p>
<p>下一步创建<code>Movie.js</code>组件，代码如下</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Movie.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">DEFAULT_PLACEHOLDER_IMAGE</span> = </span><br><span class="line"><span class="string">&quot;https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Movie</span> = (<span class="params">&#123;movie&#125;</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//不存在则展示默认图片</span></span><br><span class="line">    <span class="keyword">const</span> poster = movie.<span class="property">Poster</span> === <span class="string">&quot;N/A&quot;</span>? <span class="variable constant_">DEFAULT_PLACEHOLDER_IMAGE</span> : movie.<span class="property">Poster</span>;</span><br><span class="line">    <span class="keyword">return</span>(</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;movie&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;movie.Title&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span>//展示电影标题</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;poster&#125;</span> <span class="attr">alt</span>=<span class="string">&#123;</span>`<span class="attr">The</span> <span class="attr">movie</span> <span class="attr">titled:</span>$&#123;<span class="attr">movie.Title</span>&#125;`&#125; <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>(&#123;movie.Year&#125;)<span class="tag">&lt;/<span class="name">p</span>&gt;</span>//展示电影年份</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Movie</span>;</span><br></pre></td></tr></table></figure>

<p>接下来开始创建<code>Search</code>组件。这是最关键的一部分，因为使用Hooks之前的React为了处理内部状态需要创建一个类组件…不过现在利用Hooks可以在函数组件内部处理自己的状态。在<code>components</code>文件夹下新建<code>Search.js</code>文件并加入如下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Search.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Search</span> = (<span class="params">props</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> [searchValue, setSearchValue] = <span class="title function_">useState</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleSearchInputChanges</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">        <span class="title function_">setSearchValue</span>(e.<span class="property">target</span>.<span class="property">value</span>);<span class="comment">//修改搜索值</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">resetInputField</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="title function_">setSearchValue</span>(<span class="string">&#x27;&#x27;</span>);<span class="comment">//重置搜索</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">callSearchFunction</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">        e.<span class="title function_">preventDefault</span>();<span class="comment">//阻止默认操作</span></span><br><span class="line">        props.<span class="title function_">search</span>(searchValue);<span class="comment">//调用搜索</span></span><br><span class="line">        <span class="title function_">resetInputField</span>();<span class="comment">//调用重置函数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>(</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">form</span> <span class="attr">className</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&#123;searchValue&#125;</span> <span class="attr">onChange</span>=<span class="string">&#123;handleSearchInputChanges&#125;/</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;SEARCH&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;callSearchFunction&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Search</span>;</span><br></pre></td></tr></table></figure>

<h3 id="Hooks-API-useState介绍"><a href="#Hooks-API-useState介绍" class="headerlink" title="Hooks API - useState介绍"></a>Hooks API - useState介绍</h3><blockquote>
<p>在<code>Search.js</code>组件中使用了一个<strong>hooks API</strong>，即<strong>useState</strong>。顾名思义它允许我们向函数组件添加React状态。<strong>useState</strong>钩子接收一个初始状态参数，并返回一个数组包含当前的状态（<em>this.state</em>）和一个更新它的函数（<em>this.setState</em>）。<br>在我们的示例中，我们将当前状态作为搜索输入值传递。在输入框触发onChange事件时，将调用<em>handleSearchInputChanges</em>函数用于更新输入的搜索值。<em>resetInputField</em>方法用于清空当前搜索框的值。(<a href="https://legacy.reactjs.org/docs/hooks-state.html">更多useState内容</a>)</p>
</blockquote>
<p>接下来让我们更新<code>App.js</code>中的代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//App.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useEffect, useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Header</span> <span class="keyword">from</span> <span class="string">&#x27;./Header&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Movie</span> <span class="keyword">from</span> <span class="string">&#x27;./Movie&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Search</span> <span class="keyword">from</span> <span class="string">&#x27;./Search&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">MOVIE_API_URL</span> = <span class="string">&quot;https://www.omdbapi.com/?s=man&amp;apikey=4a3b711b&quot;</span>; <span class="comment">// 用自己的替换</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">App</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [loading, setLoading] = <span class="title function_">useState</span>(<span class="literal">true</span>);<span class="comment">//加载状态</span></span><br><span class="line">  <span class="keyword">const</span> [movies, setMovies] = <span class="title function_">useState</span>([]);<span class="comment">//电影列表</span></span><br><span class="line">  <span class="keyword">const</span> [errorMessage,setErrorMessage] = <span class="title function_">useState</span>(<span class="literal">null</span>);<span class="comment">//错误信息</span></span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">fetch</span>(<span class="variable constant_">MOVIE_API_URL</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>()).<span class="title function_">then</span>(<span class="function"><span class="params">jsonResponse</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">setMovies</span>(jsonResponse.<span class="property">Search</span>);</span><br><span class="line">      <span class="title function_">setLoading</span>(<span class="literal">false</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,[]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">search</span> = searchValue =&gt; &#123;<span class="comment">//搜索方法</span></span><br><span class="line">    <span class="title function_">setLoading</span>(<span class="literal">true</span>);</span><br><span class="line">    <span class="title function_">setErrorMessage</span>(<span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">    <span class="title function_">fetch</span>(<span class="string">`https://www.omdbapi.com/?s=<span class="subst">$&#123;searchValue&#125;</span>&amp;apikey=4a3b711b`</span>)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function"><span class="params">jsonResponse</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(jsonResponse.<span class="property">Response</span> === <span class="string">&quot;True&quot;</span>)&#123;</span><br><span class="line">                <span class="title function_">setMovies</span>(jsonResponse.<span class="property">Search</span>);</span><br><span class="line">                <span class="title function_">setLoading</span>(<span class="literal">false</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="title function_">setErrorMessage</span>(jsonResponse.<span class="property">Error</span>);</span><br><span class="line">                <span class="title function_">setLoading</span>(<span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span>(</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#x27;App&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Header</span> <span class="attr">text</span>=<span class="string">&quot;MovieSearchApp&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Search</span> <span class="attr">search</span>=<span class="string">&#123;search&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">Search</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#x27;App-intro&#x27;</span>&gt;</span>分享一些喜欢的电影<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#x27;movies&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123; loading&amp;&amp;!errorMessage?(</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>loading...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        ):errorMessage?(</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#x27;errorMessage&#x27;</span>&gt;</span>&#123;errorMessage&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        ):(</span></span><br><span class="line"><span class="language-xml">          movies.map((movie,index) =&gt; (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Movie</span> <span class="attr">key</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">index</span>&#125;<span class="attr">-</span>$&#123;<span class="attr">movie.Title</span>&#125;`&#125; <span class="attr">movie</span>=<span class="string">&#123;movie&#125;/</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          ))</span></span><br><span class="line"><span class="language-xml">        )&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure>

<p>在上述代码中，我们用到了3个<strong>useState</strong>函数，第一个函数用于处理当前加载状态；第二个函数用于处理从服务器获取的电影数组；第三个函数用于处理API请求时可能返回的错误信息。</p>
<p>然后我们用到了第二种hooks API：<strong>useEffect</strong><br>这个钩子基本上能让你在函数组件中执行副作用，副作用指的是例如数据获取，订阅和手动操作DOM这类事情。这个钩子最棒的一部分来自官方文档的介绍：</p>
<blockquote>
<p>如果你熟悉React的类的生命周期方法，你可以将useEffect看作componentDidMout，componentDidUpdate和componentWillUnmount的结合。</p>
</blockquote>
<p>这是因为<strong>useEffect</strong>会在第一次渲染（componentDidMount）之后和每次更新（componentDidUpdate）之后进行调用。</p>
<p>你可能想知道如果它在每次更新之后都进行调用，那么它和componentDidMount有何相似的地方？那是因为这个函数接受两个参数，一个是你想要运行的函数另一个是数组。在该数组中我们只需要传入一个值去告诉React如果该值没有修改则跳过应用的函数效果。</p>
<p>根据文档，这和我们在componentDidUpdate中添加一个if判断语句类似：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//for class components</span></span><br><span class="line"><span class="title function_">componentDidUpdate</span>(<span class="params">prevProps, prevState</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(prevState.<span class="property">count</span> !== <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">count</span>)&#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">`You clicked <span class="subst">$&#123;<span class="variable language_">this</span>.state.count&#125;</span> times`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//for hooks</span></span><br><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">`You clicked <span class="subst">$&#123;count&#125;</span> times`</span>;</span><br><span class="line">&#125;,[count]);<span class="comment">// 只有count改变了才会再执行</span></span><br></pre></td></tr></table></figure>

<p>在我们的代码中初始化时并没有要改变的值，所以可以传入一个空数组来告诉React这个方法需要调用一次。</p>
<p>如你所见，我们有三个存在一定联系的<strong>useState</strong>函数，所以它们应该可以用某种方式组合起来。因此React为我们提供了另一个hook——<strong>useReducer</strong>。利用这个钩子我们的代码变成如下所示：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> initialState = &#123;</span><br><span class="line">  <span class="attr">loading</span>:<span class="literal">true</span>,</span><br><span class="line">  <span class="attr">movies</span>:[],</span><br><span class="line">  <span class="attr">errorMessage</span>:<span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">reducer</span> = (<span class="params">state,action</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">switch</span>(action.<span class="property">type</span>)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;SEARCH_MOVIES_REQUEST&quot;</span>:</span><br><span class="line">      <span class="keyword">return</span>&#123;</span><br><span class="line">        ...state,</span><br><span class="line">        <span class="attr">loading</span>:<span class="literal">true</span>,</span><br><span class="line">        <span class="attr">errorMessage</span>:<span class="literal">null</span></span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;SEARCH_MOVIES_SUCCESS&quot;</span>:</span><br><span class="line">      <span class="keyword">return</span>&#123;</span><br><span class="line">        ...state,</span><br><span class="line">        <span class="attr">loading</span>:<span class="literal">false</span>,</span><br><span class="line">        <span class="attr">movies</span>:action.<span class="property">payload</span></span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;SEARCH_MOVIES_FAILURE&quot;</span>:</span><br><span class="line">      <span class="keyword">return</span>&#123;</span><br><span class="line">        ...state,</span><br><span class="line">        <span class="attr">loading</span>:<span class="literal">false</span>,</span><br><span class="line">        <span class="attr">movies</span>:action.<span class="property">error</span></span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">      <span class="keyword">return</span> state;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">App</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [state,dispatch] = <span class="title function_">useReducer</span>(reducer,initialState);</span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">fetch</span>(<span class="variable constant_">MOVIE_API_URL</span>)</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function"><span class="params">jsonResponse</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">dispatch</span>(&#123;</span><br><span class="line">          <span class="attr">type</span>:<span class="string">&quot;SEARCH_MOVIES_SUCCESS&quot;</span>,</span><br><span class="line">          <span class="attr">payload</span>:jsonResponse.<span class="property">Search</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,[]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">search</span> = searchValue =&gt; &#123;<span class="comment">//搜索方法</span></span><br><span class="line">    <span class="title function_">dispatch</span>(&#123;</span><br><span class="line">      <span class="attr">type</span>:<span class="string">&quot;SEARCH_MOVIES_REQUEST&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="title function_">fetch</span>(<span class="string">`https://www.omdbapi.com/?s=<span class="subst">$&#123;searchValue&#125;</span>&amp;apikey=4a3b711b`</span>)</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function"><span class="params">jsonResponse</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(jsonResponse.<span class="property">Response</span> === <span class="string">&quot;True&quot;</span>)&#123;</span><br><span class="line">          <span class="title function_">dispatch</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>:<span class="string">&quot;SEARCH_MOVIES_SUCCESS&quot;</span>,</span><br><span class="line">            <span class="attr">payload</span>:jsonResponse.<span class="property">Search</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="title function_">dispatch</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>:<span class="string">&quot;SEARCH_MOVIES_FAILURE&quot;</span>,</span><br><span class="line">            <span class="attr">error</span>:jsonResponse.<span class="property">Error</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="keyword">const</span> &#123; movies, errorMessage, loading&#125; = state;</span><br><span class="line">  <span class="keyword">return</span>(</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#x27;App&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Header</span> <span class="attr">text</span>=<span class="string">&quot;MovieSearchApp&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Search</span> <span class="attr">search</span>=<span class="string">&#123;search&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">Search</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#x27;App-intro&#x27;</span>&gt;</span>分享一些喜欢的电影<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#x27;movies&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123; loading&amp;&amp;!errorMessage?(</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>loading...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        ):errorMessage?(</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#x27;errorMessage&#x27;</span>&gt;</span>&#123;errorMessage&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        ):(</span></span><br><span class="line"><span class="language-xml">          movies.map((movie,index) =&gt; (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Movie</span> <span class="attr">key</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">index</span>&#125;<span class="attr">-</span>$&#123;<span class="attr">movie.Title</span>&#125;`&#125; <span class="attr">movie</span>=<span class="string">&#123;movie&#125;/</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          ))</span></span><br><span class="line"><span class="language-xml">        )&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>useReducer</strong>钩子接受3个参数，不过我们只使用了其中2个。一个典型的用力如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> [state, dispatch] = <span class="title function_">useReducer</span>(reducer,initialState);</span><br></pre></td></tr></table></figure>

<p>在我们的代码中，reducer接收我们定义的initialState对象和一系列操作，基于操作的类型返回给我们新的状态对象。例如我们的操作类型是”<strong>SEARCH_MOVIES_REQUEST</strong>“，状态将更新为”loading&#x3D;true,errorMessage&#x3D;null”。</p>
<p>另一件需要注意的事情是，在<strong>useEffect</strong>中，我们将从服务器获取的电影数组作为payload来执行dispatch操作，在<code>search</code>方法中我们实际上有3个不同的操作。</p>
<ul>
<li>SEARCH_MOVIES_REQUEST：更新状态对象，loading&#x3D;true，errorMessage&#x3D;false。</li>
<li>SEARCH_MOVIES_SUCCESS：如果请求成功，那么更新状态，loading&#x3D;false，movies&#x3D;a_ction.payload。payload是从OMDB获取到的电影搜索结果。</li>
<li>SEARCH_MOVIES_FAILURE：请求失败的话，loading&#x3D;false，errorMessage&#x3D;action.error。error也是服务器返回的错误消息。</li>
</ul>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>至此我们整个项目做完了，用到了<strong>useState</strong>、<strong>useReducer</strong>、<strong>useEffect</strong>三个hooks。对React hooks的用法有了一个基本的了解，更多详细的内容推荐去官网阅读。</p>
<blockquote>
<p>原文链接:<br><a href="https://www.freecodecamp.org/news/how-to-build-a-movie-search-app-using-react-hooks-24eb72ddfaf7/">https://www.freecodecamp.org/news/how-to-build-a-movie-search-app-using-react-hooks-24eb72ddfaf7/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>React</tag>
        <tag>Web</tag>
      </tags>
  </entry>
</search>
